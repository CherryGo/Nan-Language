#include <iostream>
#include "难语言.h"

使用 命名空间 标准命名空间 ；

定义整数 数组 数组(100)；

不返回值的 依次输出 函数，使用这些
	整数 长度 参数：
    一开始 定义整数 甲 为 1  保持 甲 小于等于 长度  每次 甲 加1 如此
        输出 一个 数组 第(甲) 一个 空格 ；
到这里结束

不返回值的 交换 函数，使用这些
	整数 的引用 甲 ， 整数 的引用 乙
		参数：
    定义整数 临时变量 ；
    临时变量 变成 甲 ；
    甲 的新值： 乙 ；
    乙 的新值： 临时变量 ；
到这里结束

返回整数的 主 函数 从这里开始
    定义整数 长度 为 0 ， 值 ；

    输出 一个 字符串(冒泡排序演示) 一个 换行 一个 字符串(输入最多100个数字，负数结束) 一个 换行 ；

    永远循环：
        输入 到 值 ；
        如果 值 小于 0 的话
	终止循环 ；
        否则 就
	长度 加1 ；
	数组 第(长度) 的新值： 值 ；
        好了
    到这里结束

    定义整数 右边界 为 长度 ；
    定义整数 次数 为 0 ；
    当 右边界 大于 1 时：
        一开始 定义整数 甲 为 1  保持 甲 小于 右边界  每次 甲 加1 如此
	如果 数组 第(甲) 小于 数组 第(甲 加 1) 的话
	调用 交换 函数，使用这些 
		数组 第(甲) ， 数组 第(甲 加 1)
			参数 ；
        输出 一个 字符串(第) 一个 加1 次数 一个 字符串(次) 一个 换行 ；
        调用 依次输出 函数，使用这些
		长度 参数 ；
        输出 一个 换行 ；
        右边界 减1 ；
    到这里结束

    输出 一个 字符串(最终结果：) 一个 换行 ；
    调用 依次输出 函数，使用这些
	长度 参数 ；

    调用 输入 的 获取 函数 ；
    调用 输入 的 获取 函数 ；

    返回 成功 ；
到这里结束