#include "难语言.h"
#include <iostream>
#include <string>

使用 命名空间 标准命名空间 ；

忽略这些(bool a(int* array,int len);
bool a(int array[]);)



返回整数位置的 获得两个数 的函数 从这里开始
    输出 一个 字符串(请输入两个数) 一个 换行 ；
    定义整数数组(某数组,2) ；
    
    输入 到 某数组 第(1) 到 某数组 第(2) ；
    返回 某数组 ；
到这里结束

返回整数的 主 函数 从这里开始
    定义字符数串 标记 为 空串 ；
    忽略这些(定义整数 甲 和 乙 ；)
    定义整数的位置 某数组 ；
    定义整数 临时量 ；
    
    输出 一个 字符串(《难语言-从入门到放弃》配套光盘-第三章-初识循环和数组) 一个 换行 ；
    
    永远循环 从这里开始
        输出 一个 字符串(请选择加减法) 一个 换行 ；
        输入 到 标记 ；
        如果 标记 等于 字符串(加法) 或者 标记 等于 字符串(加) 的话 就
            某数组 变成 获得两个数 的函数 ；
            临时量 变成 某数组 数组的第(1) 加 某数组 数组的第(2) ；
        好了，否则 如果 标记 等于 字符串(减法) 或者 标记 等于 字符串(减) 的话 就
            某数组 变成 获得两个数 的函数 ；
            临时量 变成 某数组 数组的第(1) 减 某数组 数组的第(2) ；
        好了，否则 
            备注(如果不符合以上条件，就会执行这行)
            终止循环;
        
        输出 一个 字符串(结果是) 一个 空格 一个 临时量 一个 换行 ；
        
        忽略这些(
        输入 到 甲 到 乙 ；
        如果 甲 小于 0 的话 就 
            输出 一个 字符串(甲小于0) 一个 换行 ；
        好了
        输出 一个 字符串(结果是) 一个 甲 加 乙 一个 换行 ；
        )
    到这里结束
    
    输出 一个 字符串(输入错误，即将退出...) ；
    输入 的 获取 函数 ；
    输入 的 获取 函数 ；
    
    返回 成功 ；
到这里结束